{"version":3,"sources":["logo.svg","actions/actionTypes.js","components/GameConstants.js","components/square.js","actions/actionCreators.js","components/row.js","components/codeBoard.js","components/codeButton.js","components/codeInputNumber.js","components/codeButtonsMenu.js","components/gameButtonsMenu.js","components/gameBoard.js","App.js","serviceWorker.js","reducers/index.js","store/index.js","index.js"],"names":["module","exports","__webpack_require__","p","UPDATE_CODE_FIELD","CHANGE_CODE_BUTTON","CHANGE_INPUT_VALUE","CHANGE_COMPOSE_MOVE","LOAD_GAME_FIELD","MAKE_STEP","RESET_BOARD","STEP_BACK","LOAD_ALGO","PLAY","PAUSE","tileNames","errorNames","gameButtons","CodeSquare","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","props","updateCodeField","x","y","boardType","react_default","a","createElement","className","onClick","style","fontWeight","fontSize","value","bot","exist","fuel","food","backgroundColor","idIMG","val","isBot","name","id","Component","Square","connect","dispatch","type","payload","X","Y","Row","bots","roboNames","0","1","2","3","4","5","6","7","i","square","undefined","row","map","sq","index","renderSquare","selectedRow","state","rows","codeBoardRows","currentCodeRow","A1","B1","C1","D1","A2","B2","A3","8","A4","_ref","overflow","height","width","components_row","CodeButton","changeComposeMove","butCom","changeCodeButton","disabled","commandToText","MyButton","butCommand","buttonCommand","CodeInputNumber","onSomeChange","changeInputValue","document","getElementById","min","max","defaultValue","onChange","InputNumber","sizeValue","temp","CodeButtonsMenu","_Component","buttonsCommands","inherits","createClass","key","_this2","buttonValue","codeButton","codeInputNumber","dir","moveValue","jump1","jump2","jump3","GameButtonsMenu","_this$calcNewState","calcNewState","field","a1","b1","c1","d1","a2","b2","a3","a4","erCode","makeStep","console","log","result","join","alert","resetBoard","newGameState","JSON","parse","stringify","gameState","line","push","t","sign","length","parseInt","moveSize","cell","xNew","yNew","M","N","gameBoardRows","moveSize1","moveSize2","moveSize3","j","k","botLsize","botRsize","botNewSize","split","filter","s","newBot","e","file","target","files","reader","FileReader","onload","lines","infoLines","startsWith","_this$txtToMap","txtToMap","gameField","loadGameField","readAsText","txt","mount","holes","rockets","storages","NM","Array","fill","_this$splitXY","splitXY","_this$splitXY2","_this$splitXY3","_this$splitXY4","_this$splitXY5","tileType","arguments","XY","play","handleMakeStep","codeBoardNew","loadAlgo","download","filename","text","pom","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","stepBack","_this3","loadMap","title","handleLoadAlgo","handleSaveAlgo","handleReset","handleStepBack","paused","playing","newCode","pause","App","gameButtonsMenu","margin","gameBoard","codeButtonsMenu","components_codeBoard","Boolean","window","location","hostname","match","initialStateTestComposeRobo","previousState","foodSizeLoad","fuelSizeLoad","foodSizeUnload","fuelSizeUnload","size","A1StartingPosition","B1StartingPosition","C1StartingPosition","D1StartingPosition","gameBoardRowsStartingPosition","commandTransform","rootReducer","action","newEmptyRow","toConsumableArray","concat","assign","rowIndex","cellIndex","splice","objectSpread","currentRow","botName","getResult","oldState","stateRes","store","createStore","rootElement","ReactDOM","render","es","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83dc15bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\r\nexport const UPDATE_CODE_FIELD = 'UPDATE_CODE_FIELD';\r\nexport const CHANGE_CODE_BUTTON = 'CHANGE_CODE_BUTTON';\r\n\r\nexport const CHANGE_INPUT_VALUE = 'CHANGE_INPUT_VALUE';\r\n\r\nexport const CHANGE_COMPOSE_MOVE = 'CHANGE_COMPOSE_MOVE';\r\n\r\nexport const LOAD_GAME_FIELD = 'LOAD_GAME_FIELD';\r\n\r\nexport const MAKE_STEP = 'MAKE_STEP';\r\nexport const RESET_BOARD = 'RESET_BOARD';\r\nexport const STEP_BACK = 'STEP_BACK';\r\n\r\nexport const LOAD_ALGO = 'LOAD_ALGO';\r\nexport const PLAY = 'PLAY'\r\nexport const PAUSE = 'PAUSE'\r\n\r\nexport const GENERATE_GAME_FIELD = 'GENERATE_GAME_FIELD';\r\nexport const UPDATE_GAME_FIELD = 'UPDATE_GAME_FIELD';\r\n\r\nexport const GENERATE_CODE_FIELD = 'GENERATE_CODE_FIELD';","export const CODE = 'CODE';\r\nexport const GAME = 'GAME';\r\n\r\n\r\nexport const tileNames = {\r\n    empty: '',\r\n    mountain:'m',\r\n    hole:'h',\r\n    rocket:'r',\r\n    storage:'s',\r\n    baseA:'A',\r\n    baseB:'B',\r\n    baseC:'C',\r\n    baseD:'D'\r\n};\r\n\r\nexport const errorNames = {\r\n    outOfMap: \"Робот вышел за границы карты\",\r\n    roboCollision: \"Роботы столкнулись\",\r\n    roboFall: \"Робот упал в расщелину\",\r\n    roboMount: \"Робот столкнулся с горой\",\r\n    unexpectedCommand: \"Нет робота для исполнения команды\",\r\n    wrongCommand: \"Команда не может быть выполнена такой связкой роботов\",\r\n    outOfStorage: \"Попытка погрузки/рагрузки вне склада/ракеты\",\r\n    overload: \"Робот перегружен и не может взять дополнительный груз\",\r\n    empty: \"Робот пуст и не может положить груз\",\r\n    emptyStorage: \"Склад или ракета пустые - нельзя взять груз\",\r\n    connectionErrorLoad: \"Невозможно соединить/разъединить роботов - необходима разгрузка\",\r\n    connectionErrorMove: \"Невозможно соединить/разъединить роботов - необходимо остановить одного из роботов\",\r\n    connectionErrorNone: \"Невозможно соединить/разъединить роботов - необходимо поставить робота справа от \",\r\n    connectionErrorPlace: \"Невозможно разъединить роботов - необходима свободная клетка справа\",\r\n}\r\n\r\nexport const gameButtons = [\r\n    'UP',\r\n    'DOWN',\r\n    'LEFT',\r\n    'RIGHT',\r\n    'COMPOSED',\r\n\r\n    'LOAD',\r\n    'UNLOAD',\r\n\r\n    'SPLIT',\r\n    'CONNECT',\r\n    'CLEAR'\r\n]\r\n\r\nexport const moveDir = {\r\n    moveN:'UP',\r\n    moveS:'DOWN',\r\n    moveW:'LEFT',\r\n    moveE:'RIGHT',\r\n    moveNE:'UP_RIGHT',\r\n    moveNW:'UP_LEFT',\r\n    moveSE:'DOWN_RIGHT',\r\n    moveSW:'DOWN_LEFT'\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './componentsStyles.css';\r\nimport {updateCodeField} from '../actions/actionCreators'\r\nimport {CODE, GAME, tileNames} from './GameConstants.js';\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        updateCodeField: (x, y) => dispatch(updateCodeField(x, y))\r\n    };\r\n}\r\n\r\n\r\nclass CodeSquare extends Component{\r\n    constructor() {\r\n        super();\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        this.props.updateCodeField( this.props.x, this.props.y )\r\n    }\r\n\r\n    render()\r\n    {\r\n        if(this.props.boardType === CODE) {\r\n            if (this.props.y !== 0)\r\n                {\r\n                    if (this.props.x !== 0)\r\n                        return (\r\n                            <div className=\"divTableCell\">\r\n                                <button className=\"square\" onClick={this.handleClick} style={{ fontWeight: 'bolder', fontSize: '200%'}}>\r\n                                    {\r\n                                        this.props.value\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                        );\r\n                    else\r\n                        return (\r\n                            <div className=\"divTableCell\" style={{ fontWeight: 'bolder', fontSize: '200%'}}>\r\n                                    {\r\n                                        this.props.y\r\n                                    }\r\n                            </div>\r\n                        );\r\n                }\r\n            else{\r\n                //console.log(this.props)\r\n                if(this.props.x === 0)\r\n                    return (\r\n                        <div className=\"divTableCell\" style={{ fontWeight: 'bolder', fontSize: '200%'}}>\r\n                            {\r\n                                this.props.value\r\n                            }\r\n                        </div>\r\n                    );\r\n                if(this.props.bot.exist >= 0)\r\n                    return (\r\n                        <div className=\"divTableCell\">\r\n                            {\r\n                                this.props.value + ' (Т' + this.props.bot.fuel + ' П'+ this.props.bot.food + ')'\r\n                            }\r\n                        </div>\r\n                    );\r\n                else\r\n                    return (\r\n                        <div className=\"divTableCell\" style={{ backgroundColor: 'grey'}}>\r\n                            {\r\n                                this.props.value + ' (Т' + this.props.bot.fuel + ' П'+ this.props.bot.food + ')'\r\n                            }\r\n                        </div>\r\n                    );\r\n            }\r\n\r\n        }\r\n        else {\r\n            var idIMG = '';\r\n            var val = this.props.value;\r\n            if (this.props.bot.isBot) {\r\n                idIMG = 'robo';\r\n                val = this.props.bot.name\r\n            }\r\n\r\n            if (this.props.value[0] === tileNames.rocket){\r\n                idIMG = 'rocket';\r\n                //console.log(this.props.value);\r\n                val = 'T' + (this.props.value[3] - this.props.value[1]) + ' П' + (this.props.value[4] - this.props.value[2])\r\n            }\r\n\r\n            if (this.props.value[0] === tileNames.storage) {\r\n                idIMG = 'storage';\r\n                val = 'T' + this.props.value[1] +\r\n                     ' П' + this.props.value[2]\r\n            }\r\n\r\n            if (this.props.value[0] === tileNames.hole) {\r\n                idIMG = 'hole';\r\n                val = '';\r\n            }\r\n\r\n            if (this.props.value[0] === tileNames.mountain){\r\n                idIMG = 'mountain';\r\n                val = '';\r\n            }\r\n\r\n\r\n            return (\r\n                <div className=\"divTableCell\" id = {idIMG}>\r\n                    <div>\r\n                    {\r\n                        val //+\"x\"+ this.props.x.toString() +\"y\"+ this.props.y.toString()\r\n                    }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst Square = connect(null, mapDispatchToProps)(CodeSquare);\r\n\r\nexport default Square;\r\n\r\n/*\r\nfunction Square(props){\r\n    return(\r\n        <div className=\"divTableCell\">\r\n            <button className=\"square\" onClick={props.onClick}>\r\n                {\r\n                    props.value +\"x\"+ this.props.x.toString() +\"y\"+ this.props.y.toString()\r\n                }\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n* */","import {UPDATE_CODE_FIELD, CHANGE_CODE_BUTTON, CHANGE_INPUT_VALUE, CHANGE_COMPOSE_MOVE, LOAD_GAME_FIELD, MAKE_STEP, RESET_BOARD, STEP_BACK, LOAD_ALGO, PLAY, PAUSE} from \"./actionTypes\";\r\n\r\n\r\n\r\nexport function updateCodeField(X, Y){\r\n    return({\r\n        type: UPDATE_CODE_FIELD,\r\n        payload: {\r\n            X: X,\r\n            Y: Y\r\n        }\r\n    })\r\n}\r\n\r\nexport function changeCodeButton(butCom){\r\n    return({\r\n        type: CHANGE_CODE_BUTTON,\r\n        payload: {\r\n            buttonCommand: butCom\r\n        }\r\n    })\r\n}\r\n\r\nexport function changeInputValue(value, id){\r\n    return({\r\n        type: CHANGE_INPUT_VALUE,\r\n        payload: {\r\n            sizeValue: value,\r\n            id: id\r\n        }\r\n    })\r\n}\r\n\r\nexport function changeComposeMove(butCom, id) {\r\n    return({\r\n        type: CHANGE_COMPOSE_MOVE,\r\n        payload: {\r\n            butCom: butCom,\r\n            id: id\r\n        }\r\n    })\r\n}\r\n\r\nexport function loadGameField(field, a1, b1, c1, d1) {\r\n\r\n    return({\r\n        type: LOAD_GAME_FIELD,\r\n        payload: {\r\n            field: field,\r\n            a1: a1,\r\n            b1: b1,\r\n            c1: c1,\r\n            d1: d1\r\n        }\r\n    })\r\n}\r\n\r\nexport function makeStep(field, a1, b1, c1, d1, a2, b2, a3, a4) {\r\n    return({\r\n        type: MAKE_STEP,\r\n        payload: {\r\n            field: field,\r\n            a1: a1,\r\n            b1: b1,\r\n            c1: c1,\r\n            d1: d1,\r\n            a2: a2,\r\n            b2: b2,\r\n            a3: a3,\r\n            a4: a4\r\n        }\r\n    })\r\n}\r\n\r\nexport function resetBoard() {\r\n    return({\r\n        type: RESET_BOARD,\r\n    })\r\n}\r\n\r\nexport function stepBack() {\r\n    return({\r\n        type: STEP_BACK,\r\n    })\r\n}\r\n\r\nexport function loadAlgo(codeBoard) {\r\n    return({\r\n        type: LOAD_ALGO,\r\n        payload:{\r\n            newCode: codeBoard\r\n        }\r\n    })\r\n}\r\n\r\nexport function play() {\r\n    return({\r\n        type: PLAY,\r\n    })\r\n}\r\n\r\nexport function pause() {\r\n    return({\r\n        type: PAUSE,\r\n    })\r\n}\r\n/*\r\nexport function changeField(x, y, value){\r\n    var boardRows = [];\r\n\r\n\r\n    for (var i = 0; i < M; i++) {\r\n        boardRows[i] = Array(N);\r\n    }\r\n\r\n    return({\r\n        type: GENERATE_FIELD,\r\n        payload: {\r\n            N: N,\r\n            M: M,\r\n            boardRows: boardRows\r\n        }\r\n    })\r\n}*/","import React, { Component } from 'react';\r\nimport Square from './square';\r\nimport './componentsStyles.css';\r\nimport {CODE, GAME} from \"./GameConstants\";\r\n\r\nclass Row extends Component {\r\n    renderSquare(val, x, y, boardType, bots) {\r\n\r\n        const roboNames = {\r\n            0: 'A1',\r\n            1: 'B1',\r\n            2: 'C1',\r\n            3: 'D1',\r\n            4: 'A2',\r\n            5: 'B2',\r\n            6: 'A3',\r\n            7: 'A4',\r\n        };\r\n\r\n        if(boardType === GAME)\r\n            for(var i = 0; i < 8; i++) {\r\n                if (\r\n                    bots[i][0] === y &&\r\n                    bots[i][1] === x\r\n                )\r\n                    return (\r\n                        <Square\r\n                            value={val}\r\n                            x={x}\r\n                            y={y}\r\n                            boardType={boardType}\r\n                            bot={{isBot: true, name: roboNames[i]}}\r\n                        />);\r\n            }\r\n\r\n\r\n        if (boardType === CODE && bots !== undefined){\r\n            //console.log(bots)\r\n                return (\r\n                    <Square\r\n                        value={val}\r\n                        x={x}\r\n                        y={y}\r\n                        boardType={boardType}\r\n                        bot={{isBot:false, fuel: bots[x][2], food: bots[x][3], exist: bots[x][0]}}\r\n                    />);\r\n        }\r\n        return (\r\n            <Square\r\n                value={val}\r\n                x={x}\r\n                y={y}\r\n                boardType={boardType}\r\n                bot={{isBot:false, name:''}}\r\n            />);\r\n    }\r\n\r\n    render(){\r\n        if(this.props.y === 0 && this.props.boardType === CODE){\r\n                return (\r\n                    <div className=\"divTableHeading\">\r\n                        {this.props.row.map((sq, index) => {\r\n                            return this.renderSquare(sq, index, this.props.y, this.props.boardType, this.props.bots)\r\n                        })}\r\n                    </div>\r\n                );\r\n        }\r\n        else\r\n        if(this.props.y === this.props.selectedRow && this.props.boardType === CODE){\r\n            return (\r\n                <div className=\"divTableSelectedRow\">\r\n                    {this.props.row.map((sq, index) => {\r\n                        return this.renderSquare(sq, index, this.props.y, this.props.boardType)\r\n                    })}\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return (\r\n                <div className=\"divTableRow\">\r\n                    {\r\n                        this.props.row.map((sq, index) => {\r\n                        return this.renderSquare(sq, index, this.props.y, this.props.boardType, this.props.bots)\r\n                    })}\r\n                </div>\r\n            );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n}\r\nexport default Row;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Row from \"./row\";\r\nimport './componentsStyles.css';\r\nimport {CODE} from './GameConstants'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rows: state.codeBoardRows,\r\n        selectedRow: state.currentCodeRow,\r\n        bots: {\r\n            0: 0,\r\n            1: state.A1,\r\n            2: state.B1,\r\n            3: state.C1,\r\n            4: state.D1,\r\n            5: state.A2,\r\n            6: state.B2,\r\n            7: state.A3,\r\n            8: state.A4,\r\n        }\r\n    };\r\n};\r\n\r\nconst CodeBoard = ({ rows, selectedRow, bots }) => (\r\n    <div style={{overflow: 'auto', height:'1000px', width:'100%'}}>\r\n        <div className=\"divTable\">\r\n            {rows.map((row, index) => {\r\n                return <Row row={row} y={index} boardType={CODE} selectedRow={selectedRow} bots={bots}/>\r\n            })}\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps)(CodeBoard);\r\n\r\n/*\r\n*handleClick(x, y) {\r\n    rows =  state.rows;\r\n    return (rows[x][y]);\r\n}\r\n*\r\n*\r\n*\r\nconst Board = ({ rows }) => (\r\n    <div className=\"board\">\r\n        {rows.map((row, index) => {\r\n                return <Row key={`row-${row.id}`} row={row} />;\r\n        })}\r\n    </div>\r\n);\r\n*\r\nconst Board = ({ rows }) => (\r\n    <div className=\"board\">\r\n        {rows.map((row, index) => {\r\n                return <div>{row}</div>\r\n        })}\r\n    </div>\r\n);\r\n* */","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './componentsStyles.css';\r\nimport {changeCodeButton, changeComposeMove} from '../actions/actionCreators';\r\n\r\n//import ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\n//import Button from 'react-bootstrap/Button'\r\n//import ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n//import ToggleButton from 'react-bootstrap/ToggleButton'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        changeCodeButton: (butCommand) => dispatch(changeCodeButton(butCommand)),\r\n        changeComposeMove: (butCom, id) => dispatch(changeComposeMove(butCom, id))\r\n    };\r\n}\r\n\r\n\r\nfunction commandToText(butCom){\r\n    switch (butCom) {\r\n        case 'UP': return('↑');\r\n        case 'DOWN': return('↓');\r\n        case 'RIGHT': return('→');\r\n        case 'LEFT': return('←');\r\n        case 'COMPOSED': return('✵');\r\n        case 'SPLIT': return('Расстык');\r\n        case 'CONNECT': return('Стык');\r\n        case 'LOAD': return('+');\r\n        case 'UNLOAD': return('-');\r\n        case 'CLEAR': return('Удалить');\r\n\r\n\r\n\r\n        case '↑': return('↑');\r\n        case '↓': return('↓');\r\n        case '→': return('→');\r\n        case '←': return('←');\r\n        case '↖': return('↖');\r\n        case '↗': return('↗');\r\n        case '↘': return('↘');\r\n        case '↙': return('↙');\r\n        case '': return('');\r\n\r\n    }\r\n}\r\nclass CodeButton extends Component{\r\n    constructor() {\r\n        super();\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        if(!this.props.id)\r\n            this.props.changeCodeButton( this.props.butCom );\r\n        else\r\n            this.props.changeComposeMove(this.props.butCom, this.props.id);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <button className=\"square\" onClick={this.handleClick} disabled={this.props.disabled} style={{ fontWeight: 'bolder', fontSize: '70%'}}>\r\n                    {\r\n                        commandToText(this.props.butCom)\r\n                    }\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\nconst MyButton  = connect(null, mapDispatchToProps)(CodeButton);\r\n\r\nexport default MyButton;\r\n\r\n/*\r\nfunction Square(props){\r\n    return(\r\n        <div className=\"divTableCell\">\r\n            <button className=\"square\" onClick={props.onClick}>\r\n                {\r\n                    props.value +\"x\"+ props.x.toString() +\"y\"+ props.y.toString()\r\n                }\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n* */\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './componentsStyles.css';\r\nimport {changeInputValue} from '../actions/actionCreators';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        changeInputValue: (value, id) => dispatch(changeInputValue(value, id))\r\n    };\r\n}\r\n\r\n\r\n\r\nclass CodeInputNumber extends Component{\r\n    constructor() {\r\n        super();\r\n        this.onSomeChange  = this.handleClick.bind(this);\r\n\r\n    }\r\n\r\n\r\n    handleClick() {\r\n        this.props.changeInputValue( document.getElementById(this.props.id).value, this.props.id )\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"flex-container\" style={{ fontWeight: 'bolder', fontSize: '100%', width:'100%'}}>\r\n                <div>\r\n                    {this.props.name}\r\n                </div>\r\n                <input type=\"number\" id={this.props.id} name={this.props.name} min={this.props.min} max=\"8\" defaultValue={this.props.min} onChange={this.onSomeChange}/>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\nconst InputNumber  = connect(null, mapDispatchToProps)(CodeInputNumber);\r\n\r\nexport default InputNumber;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './componentsStyles.css';\r\nimport CodeButton from './codeButton';\r\nimport CodeInputNumber from './codeInputNumber';\r\nimport {gameButtons} from './GameConstants';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        buttonValue: state.buttonValue,\r\n        moveValue: state.moveValue\r\n    };\r\n};\r\n\r\n\r\nconst temp = ['↑','↓','→','←','↖','↗','↘','↙',''];\r\n\r\nexport class CodeButtonsMenu extends  Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.buttonsCommands = gameButtons;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"flex-container\">\r\n                    {this.buttonsCommands.map((value, index) => {\r\n                        if (index < 4)\r\n                        {\r\n                            if (this.props.buttonValue !== value)\r\n                                return <CodeButton butCom={value} disabled={false}/>\r\n                            else\r\n                                return <CodeButton butCom={value} disabled={true}/>\r\n                        }\r\n                    })}\r\n                    <CodeInputNumber id={'moveSize'} min='1'/>\r\n\r\n                    {this.buttonsCommands.map((value, index) => {\r\n                        if (index === 5)\r\n                        {\r\n                            if (this.props.buttonValue !== value)\r\n                                return <CodeButton butCom={value} disabled={false}/>\r\n                            else\r\n                                return <CodeButton butCom={value} disabled={true}/>\r\n                        }\r\n                    })}\r\n                    <CodeInputNumber id={'fuelSizeLoad'} name={'Т'} min='0'/>\r\n                    <CodeInputNumber id={'foodSizeLoad'} name={'П'} min='0'/>\r\n\r\n                    {this.buttonsCommands.map((value, index) => {\r\n                        if (index === 6)\r\n                        {\r\n                            if (this.props.buttonValue !== value)\r\n                                return <CodeButton butCom={value} disabled={false}/>\r\n                            else\r\n                                return <CodeButton butCom={value} disabled={true}/>\r\n                        }\r\n                    })}\r\n                    <CodeInputNumber id={'fuelSizeUnload'} name={'Т'} min='0'/>\r\n                    <CodeInputNumber id={'foodSizeUnload'} name={'П'} min='0'/>\r\n\r\n\r\n                    {this.buttonsCommands.map((value, index) => {\r\n                        if (index > 6)\r\n                        {\r\n                            if (this.props.buttonValue !== value)\r\n                                return <CodeButton butCom={value} disabled={false}/>\r\n                            else\r\n                                return <CodeButton butCom={value} disabled={true}/>\r\n                        }\r\n                    })}\r\n                </div>\r\n                <div className=\"compose-main-container\">\r\n                    <div className=\"grid-item\">\r\n                        {this.buttonsCommands.map((value, index) => {\r\n                            if (index === 4)\r\n                            {\r\n                                if (this.props.buttonValue !== value)\r\n                                    return <CodeButton butCom={value} disabled={false}/>;\r\n                                else\r\n                                    return <CodeButton butCom={value} disabled={true}/>\r\n                            }\r\n                        })}\r\n                    </div>\r\n                    <div className=\"compose-step-container\">\r\n                            {\r\n                                temp.map((dir) => {\r\n                                    if (dir !== this.props.moveValue.jump1.dir)\r\n                                        return(\r\n                                            <div className=\"grid-item\">\r\n                                                <CodeButton butCom={dir} disabled={false} id={'jump1'}/>\r\n                                            </div>\r\n                                        );\r\n                                    else\r\n                                        return (\r\n                                            <div className=\"grid-item\">\r\n                                                <CodeButton butCom={dir} disabled={true} id={'jump1'}/>\r\n                                            </div>\r\n                                        )\r\n\r\n                                })\r\n                            }\r\n                        <div className=\"grid-item\">\r\n                            <CodeInputNumber id={'moveValue1'} min='1'/>\r\n                        </div>\r\n\r\n                        {\r\n                            temp.map((dir) => {\r\n                                if (dir !== this.props.moveValue.jump2.dir)\r\n                                    return(\r\n                                        <div className=\"grid-item\">\r\n                                            <CodeButton butCom={dir} disabled={false} id={'jump2'}/>\r\n                                        </div>\r\n                                    );\r\n                                else\r\n                                    return (\r\n                                        <div className=\"grid-item\">\r\n                                            <CodeButton butCom={dir} disabled={true} id={'jump2'}/>\r\n                                        </div>\r\n                                    )\r\n\r\n                            })\r\n                        }\r\n                        <div className=\"grid-item\">\r\n                            <CodeInputNumber id={'moveValue2'} min='1'/>\r\n                        </div>\r\n\r\n\r\n                        {\r\n                            temp.map((dir) => {\r\n                                if (dir !== this.props.moveValue.jump3.dir)\r\n                                    return(\r\n                                        <div className=\"grid-item\">\r\n                                            <CodeButton butCom={dir} disabled={false} id={'jump3'}/>\r\n                                        </div>\r\n                                    );\r\n                                else\r\n                                    return (\r\n                                        <div className=\"grid-item\">\r\n                                            <CodeButton butCom={dir} disabled={true} id={'jump3'}/>\r\n                                        </div>\r\n                                    )\r\n\r\n                            })\r\n                        }\r\n                        <div className=\"grid-item\">\r\n                            <CodeInputNumber id={'moveValue3'} min='1'/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(CodeButtonsMenu);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './componentsStyles.css';\r\nimport {tileNames, errorNames} from './GameConstants';\r\nimport {loadGameField, makeStep, resetBoard, stepBack, loadAlgo, play, pause} from \"../actions/actionCreators\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        gameState:{\r\n            gameBoardRows: state.gameBoardRows,\r\n            //y,x,food,fuel\r\n            1: state.A1,\r\n            2: state.B1,\r\n            3: state.C1,\r\n            4: state.D1,\r\n            5: state.A2,\r\n            6: state.B2,\r\n            7: state.A3,\r\n            8: state.A4,\r\n        },\r\n\r\n        codeBoardRows: state.codeBoardRows,\r\n        selectedRow: state.currentCodeRow,\r\n        N: state.N, //rows, y\r\n        M: state.M, //columns, x\r\n        paused: state.paused,\r\n        playing: state.playing,\r\n    };\r\n};\r\nconst roboNames = {\r\n    1: 'A1',\r\n    2: 'B1',\r\n    3: 'C1',\r\n    4: 'D1',\r\n    5: 'A2',\r\n    6: 'B2',\r\n    7: 'A3',\r\n    8: 'A4',\r\n    'A1': 1,\r\n    'B1': 2,\r\n    'C1': 3,\r\n    'D1': 4,\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        loadGameField: (field, a1,b1,c1,d1) => dispatch(loadGameField(field, a1,b1,c1,d1)),\r\n        makeStep:(field, a1,b1,c1,d1,a2,b2,a3,a4) => dispatch(makeStep(field, a1,b1,c1,d1,a2,b2,a3,a4)),\r\n        resetBoard:()=>dispatch(resetBoard()),\r\n        stepBack:()=>dispatch(stepBack()),\r\n        loadAlgo:(codeBoardNew)=>dispatch(loadAlgo(codeBoardNew)),\r\n        pause:()=>dispatch(pause()),\r\n        play:()=>dispatch(play()),\r\n    };\r\n}\r\n\r\nexport class GameButtonsMenu extends  Component{\r\n\r\n    constructor() {\r\n        super();\r\n        //this.buttonsCommands = gameButtons;\r\n    }\r\n\r\n    handleMakeStep(){\r\n        var {field, a1,b1,c1,d1,a2,b2,a3,a4,erCode} = this.calcNewState()\r\n\r\n        //console.log(this.props.gameState[\"0\"])\r\n\r\n        if(erCode == '')\r\n            this.props.makeStep(field, a1,b1,c1,d1,a2,b2,a3,a4);\r\n        else{\r\n            console.log(erCode);\r\n\r\n            var result = 'ОШИБКА \\n' + erCode.join('\\n');\r\n\r\n            alert(result);\r\n            this.props.resetBoard();\r\n\r\n\r\n        }\r\n    }\r\n    calcNewState(){\r\n        var erCode = [''];\r\n        var newGameState = JSON.parse(JSON.stringify(this.props.gameState));\r\n        var line = this.props.codeBoardRows[this.props.selectedRow];\r\n\r\n        for(var i = 1; i <= 8; i++){\r\n\r\n            var y = this.props.gameState[i][0];\r\n            var x = this.props.gameState[i][1];\r\n\r\n            if (y === -1 && line[i] !== '') {\r\n                erCode.push(errorNames.unexpectedCommand + ' - ' + roboNames[i]);\r\n            }\r\n            else\r\n                if (y !== -1 && line[i] !== ''){\r\n                //0 - движение,\r\n                // 1 - загрузка/разгрузка,\r\n                // 2 - стык,\r\n                // 3 - расстык,\r\n                //-1 - бездействие\r\n                var t = -1;\r\n\r\n                //знак для загрузки/разгрузки\r\n                var sign = 0;\r\n\r\n                switch (line[i][0]) {\r\n                    case '+': sign = 1; t = 1; break;\r\n                    case '-': sign = -1; t = 1; break;\r\n                    case 'с': t = 2; break;\r\n                    case 'р': t = 3; break;\r\n                    default: t = 0; break;\r\n                }\r\n                switch (t) {\r\n                    case 0:{\r\n                        if(i <= 6){\r\n                            if(line[i].length > 2 ||\r\n                                (parseInt(line[i][1]) > 1 && i <= 4) ||\r\n                                parseInt(line[i][1]) > 3 ||\r\n                                line[i][0] === '↖' ||\r\n                                line[i][0] === '↗' ||\r\n                                line[i][0] === '↘' ||\r\n                                line[i][0] === '↙'\r\n                            ) {\r\n                                erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                            }\r\n\r\n                            var moveSize = parseInt(line[i][1]);\r\n                            for(var cell = 0; cell < moveSize; cell++){\r\n                                //y\r\n                                if(line[i][0] === '↑'){\r\n                                    newGameState[i][0] -= 1;\r\n                                }\r\n                                if(line[i][0] === '↓'){\r\n                                    newGameState[i][0] += 1;\r\n                                }\r\n                                //x\r\n                                if(line[i][0] === '→'){\r\n                                    newGameState[i][1] += 1;\r\n                                }\r\n                                if(line[i][0] === '←'){\r\n                                    newGameState[i][1] -= 1;\r\n                                }\r\n\r\n                                var xNew = newGameState[i][1];\r\n                                var yNew = newGameState[i][0];\r\n\r\n                                if(\r\n                                    xNew >= this.props.M || xNew < 0 ||\r\n                                    yNew >= this.props.N || yNew < 0\r\n                                ) {\r\n                                    erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                }\r\n                                else\r\n                                    if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                        erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                    }\r\n                            }\r\n                        }\r\n                        else if(i === 7){\r\n                            if(\r\n                                line[i].length > 4 ||\r\n                                line[i][0] === '↖' ||\r\n                                line[i][0] === '↗' ||\r\n                                line[i][0] === '↘' ||\r\n                                line[i][0] === '↙'\r\n                            ) {\r\n                                erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                            }\r\n\r\n                            var moveSize1 = parseInt(line[i][1]);\r\n                            var moveSize2 = 0;\r\n                            var xNew = 0;\r\n                            var yNew = 0;\r\n\r\n                            //первая часть движения\r\n                            for(var cell = 0; cell < moveSize1; cell++){\r\n                                //y\r\n                                if(line[i][0] === '↑'){\r\n                                    newGameState[i][0] -= 1;\r\n                                }\r\n                                if(line[i][0] === '↓'){\r\n                                    newGameState[i][0] += 1;\r\n                                }\r\n                                //x\r\n                                if(line[i][0] === '→'){\r\n                                    newGameState[i][1] += 1;\r\n                                }\r\n                                if(line[i][0] === '←'){\r\n                                    newGameState[i][1] -= 1;\r\n                                }\r\n\r\n                                xNew = newGameState[i][1];\r\n                                yNew = newGameState[i][0];\r\n\r\n                                if(\r\n                                    xNew >= this.props.M || xNew < 0 ||\r\n                                    yNew >= this.props.N || yNew < 0\r\n                                ) {\r\n                                    erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                }\r\n                                else\r\n                                    if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                        erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            if(\r\n                                xNew >= this.props.M || xNew < 0 ||\r\n                                yNew >= this.props.N || yNew < 0\r\n                            ) {\r\n                                erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                            }else//промежуточная проверка на поворот в яме\r\n                                if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.hole) {\r\n                                    erCode.push(errorNames.roboFall + ' - ' + roboNames[i]);\r\n                                }\r\n                            //вторая, если существует\r\n                            if(line[i].length > 2){\r\n                                if(\r\n                                    line[i][2] === '↖' ||\r\n                                    line[i][2] === '↗' ||\r\n                                    line[i][2] === '↘' ||\r\n                                    line[i][2] === '↙'\r\n                                ) {\r\n                                    erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                                }\r\n                                moveSize2 = parseInt(line[i][3]);\r\n                                for(var cell = 0; cell < moveSize2; cell++){\r\n                                    //y\r\n                                    if(line[i][2] === '↑'){\r\n                                        newGameState[i][0] -= 1;\r\n                                    }\r\n                                    if(line[i][2] === '↓'){\r\n                                        newGameState[i][0] += 1;\r\n                                    }\r\n                                    //x\r\n                                    if(line[i][2] === '→'){\r\n                                        newGameState[i][1] += 1;\r\n                                    }\r\n                                    if(line[i][2] === '←'){\r\n                                        newGameState[i][1] -= 1;\r\n                                    }\r\n\r\n                                    xNew = newGameState[i][1];\r\n                                    yNew = newGameState[i][0];\r\n\r\n                                    if(\r\n                                        xNew >= this.props.M || xNew < 0 ||\r\n                                        yNew >= this.props.N || yNew < 0\r\n                                    ) {\r\n                                        erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                    }\r\n                                    else\r\n                                        if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                            erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                        }\r\n\r\n                                }\r\n                            }\r\n\r\n                            //проверка на превышение длины движения роботом\r\n                            if((moveSize2 + moveSize1) > 5){\r\n                                erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                            }\r\n                        }\r\n                        else if(i === 8){\r\n\r\n                            var moveSize1 = parseInt(line[i][1]);\r\n                            var moveSize2 = 0;\r\n                            var moveSize3 = 0;\r\n                            var xNew = 0;\r\n                            var yNew = 0;\r\n\r\n                            //первая часть движения\r\n                            for(var cell = 0; cell < moveSize1; cell++){\r\n                                //y\r\n                                if(line[i][0] === '↑'){\r\n                                    newGameState[i][0] -= 1;\r\n                                }\r\n                                if(line[i][0] === '↓'){\r\n                                    newGameState[i][0] += 1;\r\n                                }\r\n                                //x\r\n                                if(line[i][0] === '→'){\r\n                                    newGameState[i][1] += 1;\r\n                                }\r\n                                if(line[i][0] === '←'){\r\n                                    newGameState[i][1] -= 1;\r\n                                }\r\n\r\n                                //Диагонали\r\n                                if(line[i][0] === '↖'){\r\n                                    newGameState[i][1] -= 1;\r\n                                    newGameState[i][0] -= 1;\r\n                                }\r\n                                if(line[i][0] === '↗'){\r\n                                    newGameState[i][1] += 1;\r\n                                    newGameState[i][0] -= 1;\r\n                                }\r\n                                if(line[i][0] === '↙'){\r\n                                    newGameState[i][1] -= 1;\r\n                                    newGameState[i][0] += 1;\r\n                                }\r\n                                if(line[i][0] === '↘'){\r\n                                    newGameState[i][1] += 1;\r\n                                    newGameState[i][0] += 1;\r\n                                }\r\n                                xNew = newGameState[i][1];\r\n                                yNew = newGameState[i][0];\r\n\r\n                                if(\r\n                                    xNew >= this.props.M || xNew < 0 ||\r\n                                    yNew >= this.props.N || yNew < 0\r\n                                ) {\r\n                                    erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                }\r\n                                else\r\n                                    if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                        erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                    }\r\n\r\n                            }\r\n\r\n                            //промежуточная проверка на поворот в яме\r\n                            if(\r\n                                xNew >= this.props.M || xNew < 0 ||\r\n                                yNew >= this.props.N || yNew < 0\r\n                            ) {\r\n                                erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                            }else\r\n                                if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.hole) {\r\n                                erCode.push(errorNames.roboFall + ' - ' + roboNames[i]);\r\n                            }\r\n\r\n                            //вторая, если существует\r\n                            if(line[i].length > 2){\r\n\r\n                                moveSize2 = parseInt(line[i][3]);\r\n                                for(var cell = 0; cell < moveSize2; cell++){\r\n                                    //y\r\n                                    if(line[i][2] === '↑'){\r\n                                        newGameState[i][0] -= moveSize2;\r\n                                    }\r\n                                    if(line[i][2] === '↓'){\r\n                                        newGameState[i][0] += moveSize2;\r\n                                    }\r\n                                    //x\r\n                                    if(line[i][2] === '→'){\r\n                                        newGameState[i][1] += moveSize2;\r\n                                    }\r\n                                    if(line[i][2] === '←'){\r\n                                        newGameState[i][1] -= moveSize2;\r\n                                    }\r\n\r\n                                    //Диагонали\r\n                                    if(line[i][2] === '↖'){\r\n                                        newGameState[i][1] -= 1;\r\n                                        newGameState[i][0] -= 1;\r\n                                    }\r\n                                    if(line[i][2] === '↗'){\r\n                                        newGameState[i][1] += 1;\r\n                                        newGameState[i][0] -= 1;\r\n                                    }\r\n                                    if(line[i][2] === '↙'){\r\n                                        newGameState[i][1] -= 1;\r\n                                        newGameState[i][0] += 1;\r\n                                    }\r\n                                    if(line[i][2] === '↘'){\r\n                                        newGameState[i][1] += 1;\r\n                                        newGameState[i][0] += 1;\r\n                                    }\r\n                                    xNew = newGameState[i][1];\r\n                                    yNew = newGameState[i][0];\r\n\r\n                                    if(\r\n                                        xNew >= this.props.M || xNew < 0 ||\r\n                                        yNew >= this.props.N || yNew < 0\r\n                                    ) {\r\n                                        erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                    }\r\n                                    else\r\n                                        if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                            erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                        }\r\n                                }\r\n                            }\r\n\r\n                            if(\r\n                                xNew >= this.props.M || xNew < 0 ||\r\n                                yNew >= this.props.N || yNew < 0\r\n                            ) {\r\n                                erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                            }else//промежуточная проверка на поворот в яме\r\n                                if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.hole) {\r\n                                    erCode.push(errorNames.roboFall + ' - ' + roboNames[i]);\r\n                                }\r\n\r\n                            //вторая, если существует\r\n                            if(line[i].length > 4){\r\n\r\n                                moveSize3 = parseInt(line[i][5]);\r\n                                for(var cell = 0; cell < moveSize2; cell++){\r\n                                    //y\r\n                                    if(line[i][4] === '↑'){\r\n                                        newGameState[i][0] -= moveSize2;\r\n                                    }\r\n                                    if(line[i][4] === '↓'){\r\n                                        newGameState[i][0] += moveSize2;\r\n                                    }\r\n                                    //x\r\n                                    if(line[i][4] === '→'){\r\n                                        newGameState[i][1] += moveSize2;\r\n                                    }\r\n                                    if(line[i][4] === '←'){\r\n                                        newGameState[i][1] -= moveSize2;\r\n                                    }\r\n\r\n                                    //Диагонали\r\n                                    if(line[i][4] === '↖'){\r\n                                        newGameState[i][1] -= 1;\r\n                                        newGameState[i][0] -= 1;\r\n                                    }\r\n                                    if(line[i][4] === '↗'){\r\n                                        newGameState[i][1] += 1;\r\n                                        newGameState[i][0] -= 1;\r\n                                    }\r\n                                    if(line[i][4] === '↙'){\r\n                                        newGameState[i][1] -= 1;\r\n                                        newGameState[i][0] += 1;\r\n                                    }\r\n                                    if(line[i][4] === '↘'){\r\n                                        newGameState[i][1] += 1;\r\n                                        newGameState[i][0] += 1;\r\n                                    }\r\n                                    xNew = newGameState[i][1];\r\n                                    yNew = newGameState[i][0];\r\n\r\n                                    if(\r\n                                        xNew >= this.props.M || xNew < 0 ||\r\n                                        yNew >= this.props.N || yNew < 0\r\n                                    ) {\r\n                                        erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                    }\r\n                                    else\r\n                                    if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                        erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            //проверка на превышение длины движения роботом\r\n                            if((moveSize3 + moveSize2 + moveSize1) > 8){\r\n                                erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                            }\r\n                        }\r\n\r\n\r\n                        /*\r\n                                                var xNew = newGameState[i][1];\r\n                                                var yNew = newGameState[i][0];\r\n\r\n                                                //проверка на выход за границы карты\r\n                                                if(\r\n                                                    xNew >= this.props.M || xNew < 0 ||\r\n                                                    yNew >= this.props.N || yNew < 0\r\n                                                ) {\r\n                                                    erCode.push(errorNames.outOfMap + ' - ' + roboNames[i]);\r\n                                                }\r\n\r\n                                                console.log(i)\r\n                                                console.log(yNew)\r\n                                                console.log(xNew)\r\n                                                console.log(newGameState.gameBoardRows[yNew][xNew])\r\n                                                if(newGameState.gameBoardRows[yNew][xNew][0] === tileNames.mountain) {\r\n                                                    erCode.push(errorNames.roboMount + ' - ' + roboNames[i]);\r\n                                                }*/\r\n\r\n                        break;\r\n                    }\r\n                    case 1:{\r\n\r\n                        newGameState[i][3] = newGameState[i][3] + sign*parseInt(line[i][4]);\r\n\r\n                        newGameState[i][2] = newGameState[i][2] + sign*parseInt(line[i][2]);\r\n\r\n\r\n\r\n                        //Вне склада\r\n                        if(\r\n                            newGameState.gameBoardRows[y][x][0] !== tileNames.rocket &&\r\n                            newGameState.gameBoardRows[y][x][0] !== tileNames.storage\r\n                        ){\r\n                            erCode.push(errorNames.outOfStorage + ' - ' + roboNames[i]);\r\n                        }\r\n                        else{\r\n                            newGameState.gameBoardRows[y][x][1] -= sign*parseInt(line[i][2]);\r\n                            newGameState.gameBoardRows[y][x][2] -= sign*parseInt(line[i][4]);\r\n\r\n                            if(\r\n                                newGameState.gameBoardRows[y][x][2] < 0 ||\r\n                                newGameState.gameBoardRows[y][x][1] < 0\r\n                            )\r\n                                erCode.push(errorNames.emptyStorage + ' - ' + roboNames[i]);\r\n                        }\r\n\r\n                        //Перегрузка\r\n                        if(\r\n                            i <= 4 && (newGameState[i][2] + newGameState[i][3]) > 1 ||\r\n                            i <= 6 && i >= 5 && (newGameState[i][2] + newGameState[i][3]) > 3 ||\r\n                            i <= 7 && i > 6 && (newGameState[i][2] + newGameState[i][3]) > 5 ||\r\n                            i === 8 && (newGameState[i][2] + newGameState[i][3]) > 8\r\n                        ){\r\n                            erCode.push(errorNames.overload + ' - ' + roboNames[i]);\r\n                        }\r\n//Перегрузка\r\n                        if(\r\n                            newGameState[i][2] < 0 ||\r\n                            newGameState[i][3] < 0\r\n                        ){\r\n                            erCode.push(errorNames.empty + ' - ' + roboNames[i]);\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n                        break;\r\n                    }\r\n\r\n                    case 2:{\r\n                        var j = -1;//console.log(x)\r\n                        for (var k = 1; k <= 8; k++){\r\n                            if(\r\n                                this.props.gameState[k][0] === y &&\r\n                                this.props.gameState[k][1] === x + 1\r\n                            ) {\r\n                                //console.log(x)\r\n                                j = k;\r\n                            }\r\n                        }\r\n                        if(j !== -1){\r\n                            if(line[j] != ''){\r\n                                //console.log(x + ' ' + y)\r\n                                //console.log(i + ' ' + j)\r\n                                erCode.push(errorNames.connectionErrorMove + ' - ' + roboNames[j]);\r\n                            }\r\n                            else\r\n                                if(\r\n                                    (newGameState[i][2] + newGameState[i][3]) !== 0 &&\r\n                                    (newGameState[j][2] + newGameState[j][3]) !== 0\r\n                                )\r\n                                    erCode.push(errorNames.connectionErrorLoad + ' - ' + roboNames[i] + ' - ' + roboNames[j]);\r\n                                else{\r\n\r\n                                    var botLsize = 4, botRsize = 1, botNewSize = 0;\r\n\r\n                                    if (i <= 4)\r\n                                        botLsize = 1;\r\n                                    if (i > 4 && i <= 6)\r\n                                        botLsize = 2;\r\n                                    if (i === 7)\r\n                                        botLsize = 3;\r\n\r\n                                    if (j > 4 && j <= 6)\r\n                                        botRsize = 2;\r\n                                    if (j === 7)\r\n                                        botRsize = 3;\r\n\r\n                                    console.log(i + ' ' + j)\r\n                                    if(botLsize === 4)\r\n                                        erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                                    else {\r\n                                        botNewSize = botLsize + botRsize;\r\n                                        newGameState[i][0] = -1;\r\n                                        newGameState[i][1] = -1;\r\n                                        newGameState[j][0] = -1;\r\n                                        newGameState[j][1] = -1;\r\n\r\n                                        switch (botNewSize) {\r\n                                            case 2:\r\n                                                if(newGameState[5][0] === -1)\r\n                                                    newGameState[5] = [y, x+1, 0, 0, roboNames[i] + '_' + roboNames[j]];\r\n                                                else\r\n                                                    newGameState[6] = [y, x+1, 0, 0, roboNames[i] + '_' + roboNames[j]];\r\n                                                break;\r\n                                            case 3:\r\n                                                var name = '';\r\n                                                if(i > 4)\r\n                                                    name += '_' + newGameState[i][4];\r\n                                                else\r\n                                                    name += '_' + roboNames[i];\r\n\r\n                                                if(j > 4)\r\n                                                    name += '_' + newGameState[j][4];\r\n                                                else\r\n                                                    name += '_' + roboNames[j];\r\n\r\n                                                newGameState[7]= [y, x+1, 0, 0, name];\r\n                                                break;\r\n                                            case 4:\r\n                                                var name = '';\r\n                                                if(i > 4)\r\n                                                    name += '_' + newGameState[i][4];\r\n                                                else\r\n                                                    name += '_' + roboNames[i];\r\n\r\n                                                if(j > 4)\r\n                                                    name += '_' + newGameState[j][4];\r\n                                                else\r\n                                                    name += '_' + roboNames[j];\r\n\r\n                                                newGameState[8]= [y, x+1, 0, 0, name];\r\n                                                break;\r\n                                        }\r\n                                    }\r\n                                }\r\n                        }\r\n                        else\r\n                            erCode.push(errorNames.connectionErrorNone + roboNames[i]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        break;\r\n                    }\r\n\r\n                    case 3:{\r\n                        if(x + 1 === newGameState.M)\r\n                            erCode.push(errorNames.connectionErrorPlace + ' - ' + roboNames[i]);\r\n                        else\r\n                            if(this.props.gameState.gameBoardRows[y][x+1] !== '')\r\n                                erCode.push(errorNames.connectionErrorPlace + ' - ' + roboNames[i]);\r\n                            else\r\n                                if(i < 5)\r\n                                    erCode.push(errorNames.wrongCommand + ' - ' + roboNames[i]);\r\n                                else\r\n                                {\r\n                                    //console.log(roboNames[newGameState[i][4].split('_')[0]]);\r\n                                    //console.log(newGameState[i][4]);\r\n                                    var bots = newGameState[i][4].split('_').filter(function(value){\r\n\r\n                                        return value !== '';\r\n\r\n                                    });\r\n                                    var s = bots.length - 1;\r\n                                    var newBot = roboNames[bots[0]];\r\n                                    console.log(s);\r\n                                    console.log(bots);\r\n\r\n\r\n                                    newGameState[i] = [-1, -1, 0, 0];\r\n                                    newGameState[newBot] = [y, x + 1, 0, 0];\r\n\r\n                                    switch (s) {\r\n                                        case 1: newGameState[roboNames[bots[1]]] = [y, x, 0, 0]; break;\r\n                                        case 2: newGameState[4] = [y, x, 0, 0, bots[1] + '_' + bots[2]]; console.log(bots[1] + '_' + bots[2]); break;\r\n                                        case 3: newGameState[6] = [y, x, 0, 0,  bots[1] + '_' + bots[2] + '_' + bots[3]]; break;\r\n                                    }\r\n                                }\r\n\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        //Проверка на столкновение роботов и падение в яму\r\n        for(var i = 1; i <= 8; i++){\r\n            var x = newGameState[i][1];\r\n            var y = newGameState[i][0];\r\n\r\n            if(\r\n                x > -1 && y > -1 &&\r\n                x < this.props.M && y < this.props.N\r\n            ) {//console.log(newGameState.gameBoardRows[y][x])\r\n                if(\r\n                    newGameState.gameBoardRows[y][x][0] !== tileNames.storage &&\r\n                    newGameState.gameBoardRows[y][x][0] !== tileNames.rocket\r\n                ){\r\n                    for(var j = i + 1; j <= 8; j++) {\r\n                        if(\r\n                            x !== -1 &&\r\n                            y === newGameState[j][0] &&\r\n                            x === newGameState[j][1]\r\n                        ){\r\n                            erCode.push(errorNames.roboCollision + ' - ' + roboNames[i] + ' - ' + roboNames[j]);\r\n                        }\r\n                        else;\r\n                    }\r\n                    if(newGameState.gameBoardRows[y][x] === tileNames.hole)\r\n                        erCode.push(errorNames.roboFall + ' - ' + roboNames[i]);\r\n                }\r\n                else;\r\n                //if(newGameState.gameBoardRows[y][x] === tileNames.mountain)\r\n                //    erCode.push(errorNames.roboMount + ' - ' + roboNames[i] + ' - ' + roboNames[j]);\r\n                }\r\n        }\r\n\r\n        return {\r\n            field:newGameState.gameBoardRows,\r\n            a1: newGameState[1],\r\n            b1: newGameState[2],\r\n            c1: newGameState[3],\r\n            d1: newGameState[4],\r\n            a2: newGameState[5],\r\n            b2: newGameState[6],\r\n            a3: newGameState[7],\r\n            a4: newGameState[8],\r\n            erCode: erCode\r\n        };\r\n    }\r\n\r\n    loadMap(e){\r\n        var file = e.target.files[0];\r\n        if (file !== undefined) {\r\n            var reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                var lines = e.target.result.split('\\n');\r\n                var infoLines = [];\r\n\r\n                //console.log(N.toString() + M.toString())\r\n                //Удаляем комментарии\r\n                for (var line = 0; line < lines.length; line++) {\r\n                    if (!lines[line].startsWith('//')){\r\n                        infoLines.push(lines[line]);\r\n                    }\r\n                }\r\n                var {gameField, a1, b1, c1, d1} = this.txtToMap(infoLines);\r\n\r\n                console.log(a1);\r\n                console.log(b1);\r\n                console.log(c1);\r\n                console.log(d1);\r\n                this.props.loadGameField(gameField, a1, b1, c1, d1);\r\n            };\r\n            reader.readAsText(file);\r\n\r\n        }\r\n    }\r\n    txtToMap(txt){\r\n        var field = [];\r\n\r\n        var N = 0, M = 0, mount = 0,  holes = 0, rockets = 0, storages = 0;\r\n        var a1, b1, c1, d1;\r\n        var NM = txt[0].split(\" \");\r\n        N = parseInt(NM[0]);\r\n        M = parseInt(NM[1]);\r\n        for (var i = 0; i < N; i++) {\r\n            field[i] = Array(M).fill(tileNames.empty);\r\n        }\r\n\r\n        var line = 1;\r\n        mount = parseInt(txt[line]);\r\n        for (var i = 0; i < mount; i++) {\r\n            line++;\r\n            var {x, y} = this.splitXY(txt[line]);\r\n            field[y][x] = tileNames.mountain;\r\n        }\r\n\r\n        line++;\r\n        holes = parseInt(txt[line]);\r\n        for (var i = 0; i < holes; i++) {\r\n            line++;\r\n            var {x, y} = this.splitXY(txt[line]);\r\n            field[y][x] = tileNames.hole;\r\n        }\r\n\r\n\r\n        line++;\r\n        rockets = parseInt(txt[line]);\r\n        for (var i = 0; i < rockets; i++) {\r\n            line++;\r\n            var {x, y, fuel, food} = this.splitXY(txt[line], 'storage');\r\n            field[y][x] = [tileNames.rocket, 0, 0, fuel, food];\r\n        }\r\n        line++;\r\n        storages = parseInt(txt[line]);\r\n        for (var i = 0; i < storages; i++) {\r\n            line++;\r\n            var {x, y, fuel, food} = this.splitXY(txt[line], 'storage');\r\n            field[y][x] = [tileNames.storage, fuel, food];\r\n        }\r\n        for (var i = 0; i < 4; i++) {\r\n            line++;\r\n            var {x, y} = this.splitXY(txt[line]);\r\n            switch (i) {\r\n                case 0:\r\n                    a1 = [y, x, 0, 0];\r\n                    field[y][x] = tileNames.baseA;\r\n                    break;\r\n                case 1:\r\n                    b1 = [y, x, 0, 0];\r\n                    field[y][x] = tileNames.baseB;\r\n                    break;\r\n                case 2:\r\n                    c1 = [y, x, 0, 0];\r\n                    field[y][x] = tileNames.baseC;\r\n                    break;\r\n                case 3:\r\n                    d1 = [y, x, 0, 0];\r\n                    field[y][x] = tileNames.baseD;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            gameField: field,\r\n            a1: a1,\r\n            b1: b1,\r\n            c1: c1,\r\n            d1: d1};\r\n    }\r\n    splitXY(line, tileType = 'tile'){\r\n        if (tileType === 'tile'){\r\n            var XY = line.split(\" \");\r\n            var Y = parseInt(XY[0]);\r\n            var X = parseInt(XY[1]);\r\n            //console.log(XY);\r\n            return {x:X, y:Y};\r\n        }\r\n        if (tileType === 'storage'){\r\n            var XY = line.split(\" \");\r\n            var Y = parseInt(XY[0]);\r\n            var X = parseInt(XY[1]);\r\n            var fuel = parseInt(XY[2]);\r\n            var food = parseInt(XY[3]);\r\n            //console.log(XY);\r\n            return {x:X, y:Y, fuel:fuel, food:food};\r\n        }\r\n    }\r\n\r\n\r\n    handleMakeAllSteps(e){\r\n        console.log('play')\r\n        this.props.play();\r\n        var length = this.props.codeBoardRows.length\r\n        var i = this.props.selectedRow;\r\n        while(i !== length){\r\n            i++;\r\n            console.log('more')\r\n            this.handleMakeStep(e);\r\n        }\r\n    }\r\n    handleLoadAlgo(e){\r\n        var file = e.target.files[0];\r\n\r\n        if (file !== undefined) {\r\n            var reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                //console.log(JSON.parse(e.target.result))\r\n                var codeBoardNew = JSON.parse(e.target.result);\r\n\r\n                this.props.loadAlgo(codeBoardNew);\r\n            };\r\n            reader.readAsText(file);\r\n\r\n        }\r\n    }\r\n    handleSaveAlgo(e){\r\n        this.download()\r\n    }\r\n    download(filename = 'roiRobotovAlgo.txt') {\r\n        var text = JSON.stringify(this.props.codeBoardRows)\r\n        var pom = document.createElement('a');\r\n        pom.setAttribute('href', 'data:text/plain;charset=utf-8,' +\r\n\r\n            encodeURIComponent(text));\r\n        pom.setAttribute('download', filename);\r\n\r\n        pom.style.display = 'none';\r\n        document.body.appendChild(pom);\r\n\r\n        pom.click();\r\n\r\n        document.body.removeChild(pom);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    handleStepBack(e){\r\n        if(this.props.selectedRow !== 1)\r\n            this.props.stepBack();\r\n        else\r\n            alert('Невозможно сделать шаг назад')\r\n    }\r\n    handleReset(e){\r\n        this.props.resetBoard()\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <label>\r\n                        Карта:\r\n                        <input name=\"fileMap\" type=\"file\" onChange={(e)=> this.loadMap(e)} title={\"Загрузить карту\"} />\r\n                    </label>\r\n                    <label>\r\n                        Алгоритм:\r\n                        <input name=\"fileMap\" type=\"file\" onChange={(e)=> this.handleLoadAlgo(e)} title={\"Загрузить алгоритм\"} />\r\n                    </label>\r\n                    <button onClick={(e)=> this.handleSaveAlgo(e)}>\r\n                        Сохранить алгоритм\r\n                    </button>\r\n                </div>\r\n\r\n                <button onClick={(e)=> this.handleReset(e)}>\r\n                    В начало\r\n                </button>\r\n\r\n                <button onClick={(e)=> this.handleStepBack(e)}>\r\n                    Сделать шаг назад\r\n                </button>\r\n\r\n                <button onClick={(e)=> this.handleMakeStep(e)}>\r\n                    Сделать шаг вперёд\r\n                </button>\r\n\r\n            </div>\r\n        )}\r\n\r\n    /*\r\n                    <button onClick={(e)=> this.handleMakeAllSteps(e)}>\r\n                        Выполнить алгоритм\r\n                    </button>\r\n                    */\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GameButtonsMenu);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Row from \"./row\";\r\nimport './componentsStyles.css';\r\n\r\nimport {CODE, GAME} from './GameConstants'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        rows: state.gameBoardRows,\r\n        bots: {\r\n            0: state.A1,\r\n            1: state.B1,\r\n            2: state.C1,\r\n            3: state.D1,\r\n            4: state.A2,\r\n            5: state.B2,\r\n            6: state.A3,\r\n            7: state.A4,\r\n        }\r\n    };\r\n};\r\n\r\nconst GameBoard = ({ rows, bots }) => (\r\n    <div className=\"divTable\" id=\"GAME\">\r\n        {rows.map((row, index) => {\r\n            //console.log(rows);\r\n                return <Row row={row} y={index} boardType={GAME} bots={bots}/>\r\n        })}\r\n    </div>\r\n);\r\n\r\n\r\nexport default connect(mapStateToProps)(GameBoard);\r\n\r\n/*\r\n*handleClick(x, y) {\r\n    rows =  state.rows;\r\n    return (rows[x][y]);\r\n}\r\n*\r\n*\r\n*\r\nconst Board = ({ rows }) => (\r\n    <div className=\"board\">\r\n        {rows.map((row, index) => {\r\n                return <Row key={`row-${row.id}`} row={row} />;\r\n        })}\r\n    </div>\r\n);\r\n*\r\nconst Board = ({ rows }) => (\r\n    <div className=\"board\">\r\n        {rows.map((row, index) => {\r\n                return <div>{row}</div>\r\n        })}\r\n    </div>\r\n);\r\n* */","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CodeBoard from './components/codeBoard'\nimport CodeButton from './components/codeButton'\nimport CodeButtonsMenu from './components/codeButtonsMenu'\nimport GameButtonsMenu from './components/gameButtonsMenu'\nimport GameBoard from \"./components/gameBoard\";\n\nconst App = () => (\n    <div className=\"row mt-5\">\n        <div className=\"col-md-4 offset-md-1\">\n\n            <GameButtonsMenu/>\n            <div className=\"flex-container-menu\">\n\n                <div style={{overflow: 'auto', height:'100%', width:'100%', backgroundColor:'white', margin: '1 auto'}}>\n                    <GameBoard/>\n                </div>\n                <div style={{overflow: 'auto', height:'100%', width:'100%', backgroundColor:'white', margin: '1 auto'}}>\n                    <CodeButtonsMenu />\n                </div>\n            </div>\n\n            <h2></h2>\n            <CodeBoard/>\n        </div>\n    </div>\n);\n\n/*\n<div className=\"container\">\n                <div className=\"flex-container\">\n\n<Board />\nfunction App() {\n  return (\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//import { combineReducers } from \"redux\";\r\n//export default combineReducers();\r\nimport {\r\n    UPDATE_CODE_FIELD,\r\n    CHANGE_CODE_BUTTON,\r\n    CHANGE_INPUT_VALUE,\r\n    CHANGE_COMPOSE_MOVE,\r\n    LOAD_GAME_FIELD,\r\n    MAKE_STEP,\r\n    RESET_BOARD, STEP_BACK, LOAD_ALGO, PLAY, PAUSE\r\n} from \"../actions/actionTypes\";\r\nimport {gameButtons} from \"../components/GameConstants\";\r\n\r\nconst initialState = {\r\n    previousState: {},\r\n    gameBoardRows: [\r\n        ['','','','','m','','','','','h','h','h'],\r\n\r\n        ['','m','',['r',0,0,6,7],'','','','','','','A','B'],\r\n\r\n        ['h',[\"s\", 0, 8],'',[\"s\", 0, 10],'h','h','','','','','',''],\r\n\r\n        ['','','','','','','','','h','h','',[\"s\", 8, 0]],\r\n\r\n        ['',[\"s\", 0, 9],'','','','h','','','','D','',''],\r\n\r\n        [['r',0,0,6,8],'','','','','',[\"s\", 0, 9],'','C','','',[\"s\", 10, 0]],\r\n        ['h','','','','h','','','','','','',''],\r\n        ['','','','','m',[\"s\", 0, 9],'','','','',[\"s\", 10, 0],''],\r\n        ['','m','','','','m','','','m','','','']\r\n\r\n    ],\r\n    codeBoardRows: [['А1','B1','C1','D1','А2','B2','А3','А4'],['←1','↓1','→1','←1','','','',''],['','','','','','','','']],\r\n    currentCodeRow: 1,\r\n    N: [5], //columns x\r\n    M: [5], //rows    y\r\n    buttonValue: 'UP',\r\n    moveSize:1,\r\n    foodSizeLoad:0,\r\n    fuelSizeLoad:0,\r\n    foodSizeUnload:0,\r\n    fuelSizeUnload:0,\r\n    moveValue:{\r\n        jump1:{dir:'', size:1},\r\n        jump2:{dir:'', size:1},\r\n        jump3:{dir:'', size:1},\r\n    },\r\n    //y,x,fuel,food\r\n    A1: [1, 1, 0, 0],\r\n    B1: [1, 2, 0, 0],\r\n    C1: [2, 2, 0, 0],\r\n    D1: [2, 1, 0, 0],\r\n    A2: [-1, -1, 0, 0],\r\n    B2: [-1, -1, 0, 0],\r\n    A3: [-1, -1, 0, 0],\r\n    A4: [-1, -1, 0, 0],\r\n    paused: false,\r\n    playing: false,\r\n\r\n    A1StartingPosition: [1, 1, 0, 0],\r\n    B1StartingPosition: [1, 2, 0, 0],\r\n    C1StartingPosition: [2, 2, 0, 0],\r\n    D1StartingPosition: [2, 1, 0, 0],\r\n\r\n    gameBoardRowsStartingPosition:[\r\n    ['','','','',''],\r\n    ['','A','B','',''],\r\n    ['','D','C','',''],\r\n    ['','','','',''],\r\n    ['','',[\"r\", 1, 1, 6, 7],[\"s\", 10, 11],''],\r\n],\r\n};\r\nconst initialStateSplitConnect = {\r\n    gameBoardRows: [\r\n        ['','','','',''],\r\n        ['','A','B','m',''],\r\n        ['','D','C','',''],\r\n        ['','','','',''],\r\n        ['','',[\"r\", 1, 1, 6, 7],[\"s\", 10, 11],''],\r\n    ],\r\n    codeBoardRows: [['А1','B1','C1','D1','А2','B2','А3','А4'],['стык','','→1','←1','','','',''],['','','','','расстык','','','']],\r\n    currentCodeRow: 1,\r\n    N: [5], //columns x\r\n    M: [5], //rows    y\r\n    buttonValue: 'UP',\r\n    moveSize:1,\r\n    foodSizeLoad:0,\r\n    fuelSizeLoad:0,\r\n    foodSizeUnload:0,\r\n    fuelSizeUnload:0,\r\n    moveValue:{\r\n        jump1:{dir:'', size:1},\r\n        jump2:{dir:'', size:1},\r\n        jump3:{dir:'', size:1},\r\n    },\r\n    //y,x,fuel,food\r\n    A1: [1, 1, 0, 0],\r\n    B1: [1, 2, 0, 0],\r\n    C1: [2, 2, 0, 0],\r\n    D1: [2, 1, 0, 0],\r\n    A2: [-1, -1, 0, 0],\r\n    B2: [-1, -1, 0, 0],\r\n    A3: [-1, -1, 0, 0],\r\n    A4: [-1, -1, 0, 0],\r\n    paused: false,\r\n    playing: false,\r\n\r\n    A1StartingPosition: [1, 1, 0, 0],\r\n    B1StartingPosition: [1, 2, 0, 0],\r\n    C1StartingPosition: [2, 2, 0, 0],\r\n    D1StartingPosition: [2, 1, 0, 0],\r\n\r\n    gameBoardRowsStartingPosition:[\r\n        ['','','','',''],\r\n        ['','A','B','',''],\r\n        ['','D','C','',''],\r\n        ['','','','',''],\r\n        ['','',[\"r\", 1, 1, 6, 7],[\"s\", 10, 11],''],\r\n    ],\r\n};\r\nconst initialStateTestComposeRobo = {\r\n    previousState: {},\r\n    gameBoardRows: [\r\n        ['','','','','m','','','','','h','h','h'],\r\n\r\n        ['','m','',['r',0,0,6,7],'','','','','','','A','B'],\r\n\r\n        ['h',[\"s\", 0, 8],'',[\"s\", 0, 10],'h','h','','','','','',''],\r\n\r\n        ['','','','','','','','','h','h','',[\"s\", 8, 0]],\r\n\r\n        ['',[\"s\", 0, 9],'','','','h','','','','D','',''],\r\n\r\n        [['r',0,0,6,8],'','','','','',[\"s\", 0, 9],'','C','','',[\"s\", 10, 0]],\r\n        ['h','','','','h','','','','','','',''],\r\n        ['','','','','m',[\"s\", 0, 9],'','','','',[\"s\", 10, 0],''],\r\n        ['','m','','','','m','','','m','','','']\r\n\r\n    ],\r\n    codeBoardRows: [[\"№\",\"А1\",\"B1\",\"C1\",\"D1\",\"А2\",\"B2\",\"А3\",\"А4\"],[\"\",\"стык\",\"\",\"↑1\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"стык\",\"\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"←3\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"←3\",\"←3\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"↑2\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"+Т0П3\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"←3\",\"↑1\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"-Т0П3\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"расстык\",\"\",\"\"],[\"\",\"\",\"\",\"стык\",\"←1\",\"\",\"\",\"\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"↓4→1\",\"\"],[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]],\r\n    currentCodeRow: 1,\r\n    N: [9], //y\r\n    M: [12], //x\r\n    buttonValue: 'UP',\r\n    moveSize:1,\r\n    foodSizeLoad:0,\r\n    fuelSizeLoad:0,\r\n    foodSizeUnload:0,\r\n    fuelSizeUnload:0,\r\n    moveValue:{\r\n        jump1:{dir:'', size:1},\r\n        jump2:{dir:'', size:1},\r\n        jump3:{dir:'', size:1},\r\n    },\r\n    //y,x,fuel,food\r\n    A1: [1, 10, 0, 0],\r\n    B1: [1, 11, 0, 0],\r\n    C1: [5, 8, 0, 0],\r\n    D1: [4, 9, 0, 0],\r\n    A2: [-1, -1, 0, 0],\r\n    B2: [-1, -1, 0, 0],\r\n    A3: [-1, -1, 0, 0],\r\n    A4: [-1, -1, 0, 0],\r\n    paused: false,\r\n    playing: false,\r\n\r\n    A1StartingPosition: [1, 10, 0, 0],\r\n    B1StartingPosition: [1, 11, 0, 0],\r\n    C1StartingPosition: [5, 8, 0, 0],\r\n    D1StartingPosition: [4, 9, 0, 0],\r\n\r\n    gameBoardRowsStartingPosition:[\r\n        ['','','','','m','','','','','h','h','h'],\r\n\r\n        ['','m','',['r',0,0,6,7],'','','','','','','A','B'],\r\n\r\n        ['h',[\"s\", 0, 8],'',[\"s\", 0, 10],'h','h','','','','','',''],\r\n\r\n        ['','','','','','','','','h','h','',[\"s\", 8, 0]],\r\n\r\n        ['',[\"s\", 0, 9],'','','','h','','','','D','',''],\r\n\r\n        [['r',0,0,6,8],'','','','','',[\"s\", 0, 9],'','C','','',[\"s\", 10, 0]],\r\n        ['h','','','','h','','','','','','',''],\r\n        ['','','','','m',[\"s\", 0, 9],'','','','',[\"s\", 10, 0],''],\r\n        ['','m','','','','m','','','m','','','']\r\n    ],\r\n};\r\n\r\nfunction rootReducer(state = initialStateTestComposeRobo, action) {\r\n    if (action.type === UPDATE_CODE_FIELD) {\r\n\r\n        const newEmptyRow = ['','','','','','','','',''];\r\n\r\n        var codeBoardNew = [...state.codeBoardRows];\r\n        if(action.payload.Y === (state.codeBoardRows.length - 1))\r\n            codeBoardNew = [...state.codeBoardRows, newEmptyRow];\r\n\r\n        var result = Object.assign({}, state, {\r\n            codeBoardRows: codeBoardNew.map((row, rowIndex) => {\r\n                if(rowIndex === action.payload.Y)\r\n                    return row.map((cell, cellIndex) =>{\r\n                        if(cellIndex === action.payload.X)\r\n                            return commandTransform(state.buttonValue, state);\r\n                        else\r\n                            return cell;\r\n                    })\r\n                else\r\n                    return row;\r\n            })\r\n        })\r\n\r\n\r\n        if(\r\n            action.payload.Y === (result.codeBoardRows.length - 2) &&\r\n            JSON.stringify(result.codeBoardRows[action.payload.Y]) === JSON.stringify(newEmptyRow)\r\n        ) {\r\n\r\n            codeBoardNew = [...result.codeBoardRows];\r\n            var index = action.payload.Y;\r\n            if (index !== -1) {\r\n                codeBoardNew.splice(index, 1);\r\n            }\r\n        }\r\n        var result = Object.assign({}, state, {\r\n            codeBoardRows: codeBoardNew.map((row, rowIndex) => {\r\n                if(rowIndex === action.payload.Y)\r\n                    return row.map((cell, cellIndex) =>{\r\n                        if(cellIndex === action.payload.X)\r\n                            return commandTransform(state.buttonValue, state);\r\n                        else\r\n                            return cell;\r\n                    })\r\n                else\r\n                    return row;\r\n            })\r\n        })\r\n        return result;\r\n    }\r\n    if (action.type === CHANGE_CODE_BUTTON) {\r\n        return {\r\n            ...state,\r\n            buttonValue: action.payload.buttonCommand\r\n        }\r\n    }\r\n    if (action.type === CHANGE_INPUT_VALUE) {\r\n        switch (action.payload.id) {\r\n            case 'foodSizeLoad': {\r\n                return {\r\n                    ...state,\r\n                    foodSizeLoad: action.payload.sizeValue\r\n                }\r\n            }\r\n\r\n            case 'fuelSizeLoad': {\r\n                return {\r\n                    ...state,\r\n                    fuelSizeLoad: action.payload.sizeValue\r\n                }\r\n            }\r\n\r\n            case 'foodSizeUnload': {\r\n                return {\r\n                    ...state,\r\n                    foodSizeUnload: action.payload.sizeValue\r\n                }\r\n            }\r\n\r\n            case 'fuelSizeUnload': {\r\n                return {\r\n                    ...state,\r\n                    fuelSizeUnload: action.payload.sizeValue\r\n                }\r\n            }\r\n\r\n            case 'moveSize': {\r\n                return {\r\n                    ...state,\r\n                    moveSize: action.payload.sizeValue\r\n                }\r\n            }\r\n\r\n            case 'moveValue1':{\r\n                return {\r\n                    ...state,\r\n                    moveValue: {\r\n                        ...state.moveValue,\r\n                        jump1: {\r\n                            ...state.moveValue.jump1,\r\n                            size: action.payload.sizeValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            case 'moveValue2':{\r\n                return {\r\n                    ...state,\r\n                    moveValue: {\r\n                        ...state.moveValue,\r\n                        jump2: {\r\n                            ...state.moveValue.jump2,\r\n                            size: action.payload.sizeValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            case 'moveValue3':{\r\n                return {\r\n                    ...state,\r\n                    moveValue: {\r\n                        ...state.moveValue,\r\n                        jump3: {\r\n                            ...state.moveValue.jump3,\r\n                            size: action.payload.sizeValue\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (action.type === CHANGE_COMPOSE_MOVE) {\r\n        switch (action.payload.id) {\r\n            case 'jump1':\r\n                return {\r\n                    ...state,\r\n                    moveValue: {\r\n                        ...state.moveValue,\r\n                        jump1: {\r\n                            ...state.moveValue.jump1,\r\n                            dir: action.payload.butCom\r\n                        }\r\n                    }\r\n                }\r\n            case 'jump2':\r\n                return {\r\n                    ...state,\r\n                    moveValue: {\r\n                        ...state.moveValue,\r\n                        jump2: {\r\n                            ...state.moveValue.jump2,\r\n                            dir: action.payload.butCom\r\n                        }\r\n                    }\r\n                }\r\n            case 'jump3':\r\n                return {\r\n                    ...state,\r\n                    moveValue: {\r\n                        ...state.moveValue,\r\n                        jump3: {\r\n                            ...state.moveValue.jump3,\r\n                            dir: action.payload.butCom\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n    }\r\n    if (action.type === LOAD_GAME_FIELD) {\r\n        var N = action.payload.field.length;\r\n        var M = action.payload.field[0].length;\r\n        return {\r\n            ...state,\r\n            N: N,\r\n            M: M,\r\n            gameBoardRows: Object.assign([],action.payload.field),\r\n            gameBoardRowsStartingPosition: Object.assign([],action.payload.field),\r\n            A1: action.payload.a1,\r\n            B1: action.payload.b1,\r\n            C1: action.payload.c1,\r\n            D1: action.payload.d1,\r\n\r\n            A1StartingPosition: Object.assign({},action.payload.a1),\r\n            B1StartingPosition: Object.assign({},action.payload.b1),\r\n            C1StartingPosition: Object.assign({},action.payload.c1),\r\n            D1StartingPosition: Object.assign({},action.payload.d1)\r\n        }\r\n    }\r\n    if (action.type === MAKE_STEP) {\r\n        //console.log(state.A1StartingPosition);\r\n\r\n\r\n        var currentRow = (state.currentCodeRow + 1);\r\n        if (currentRow === state.codeBoardRows.length){\r\n            getResult(state)\r\n            return {\r\n                ...state,\r\n                playing: false\r\n            }\r\n        }\r\n        else{\r\n\r\n            var oldState = JSON.parse(JSON.stringify(state));\r\n            /*console.log(state.A1)\r\n            console.log(oldState.A1)\r\n            try {\r\n            console.log(oldState.previousState.A1)\r\n            }\r\n            catch (e) {\r\n\r\n            }*/\r\n           var stateRes ={\r\n                ...state,\r\n                gameBoardRows: action.payload.field,\r\n                A1: action.payload.a1,\r\n                B1: action.payload.b1,\r\n                C1: action.payload.c1,\r\n                D1: action.payload.d1,\r\n\r\n                A2: action.payload.a2,\r\n                B2: action.payload.b2,\r\n                A3: action.payload.a3,\r\n                A4: action.payload.a4,\r\n                currentCodeRow: currentRow,\r\n                previousState: oldState\r\n            }\r\n            if (currentRow === stateRes.codeBoardRows.length - 1 && stateRes.playing)\r\n                return {\r\n                    ...stateRes,\r\n                    playing: false\r\n                }\r\n            return stateRes;\r\n        }\r\n    }\r\n    if (action.type === RESET_BOARD) {\r\n\r\n        return {\r\n            ...state,\r\n            gameBoardRows: JSON.parse(JSON.stringify(state.gameBoardRowsStartingPosition)),//Object.assign([],state.gameBoardRowsStartingPosition),\r\n            A1: Object.assign({},state.A1StartingPosition),\r\n            B1: Object.assign({},state.B1StartingPosition),\r\n            C1: Object.assign({},state.C1StartingPosition),\r\n            D1: Object.assign({},state.D1StartingPosition),\r\n            A2: [-1, -1, 0, 0],\r\n            B2: [-1, -1, 0, 0],\r\n            A3: [-1, -1, 0, 0],\r\n            A4: [-1, -1, 0, 0],\r\n            currentCodeRow: 1,\r\n            paused: false,\r\n            playing: false,\r\n        }\r\n    }\r\n\r\n    if (action.type === STEP_BACK) {\r\n        return {\r\n            ...state,\r\n            gameBoardRows: JSON.parse(JSON.stringify(state.previousState.gameBoardRows)),//Object.assign([],state.gameBoardRowsStartingPosition),\r\n            A1: JSON.parse(JSON.stringify(state.previousState.A1)),\r\n            B1: JSON.parse(JSON.stringify(state.previousState.B1)),\r\n            C1: JSON.parse(JSON.stringify(state.previousState.C1)),\r\n            D1: JSON.parse(JSON.stringify(state.previousState.D1)),\r\n            A2: JSON.parse(JSON.stringify(state.previousState.A2)),\r\n            B2: JSON.parse(JSON.stringify(state.previousState.B2)),\r\n            A3: JSON.parse(JSON.stringify(state.previousState.A3)),\r\n            A4: JSON.parse(JSON.stringify(state.previousState.A4)),\r\n            currentCodeRow: JSON.parse(JSON.stringify(state.previousState.currentCodeRow)),\r\n            previousState: JSON.parse(JSON.stringify(state.previousState.previousState)),\r\n            paused: false,\r\n            playing: false,\r\n        }\r\n    }\r\n    if(action.type === PLAY){\r\n        console.log('look')\r\n        return {\r\n            ...state,\r\n            playing: true\r\n        }\r\n    }\r\n    if(action.type === PAUSE){\r\n        return {\r\n            ...state,\r\n            playing: false,\r\n            paused: true,\r\n        }\r\n    }\r\n    if(action.type === LOAD_ALGO){\r\n        return {\r\n            ...state,\r\n            codeBoardRows: JSON.parse(JSON.stringify(action.payload.newCode))\r\n        }\r\n    }\r\n\r\n    return state;\r\n};\r\nfunction getResult(state) {\r\n\r\n    var botName ={\r\n        0: 'A1',\r\n        1: 'B1',\r\n        2: 'C1',\r\n        3: 'D1',\r\n    }\r\n\r\n    var result = [];\r\n    for (var i = 0; i < 4; i++){\r\n        if (state[botName[i]][0] !== -1) {\r\n            //console.log(botName[i][0])\r\n            //console.log(state.gameBoardRows[state[botName[i]][0]][state[botName[i]][1]])\r\n            if(state.gameBoardRows[state[botName[i]][0]][state[botName[i]][1]] == botName[i][0])\r\n                result.push('Робот ' + botName[i] +' на базе');\r\n            else\r\n                result.push('Робот ' + botName[i] +' не на базе (!)');\r\n            }\r\n        else\r\n            result.push('Робот ' + botName[i] +' не существует (!!)');\r\n    }\r\n\r\n    result = 'Результат: \\n' + result.join('\\n');\r\n\r\n    alert(result);\r\n}\r\nfunction commandTransform(buttonValue, state) {\r\n    switch (buttonValue) {\r\n        //UP\r\n        case 'UP': return('↑'+state.moveSize); break;\r\n        //DOWN\r\n        case 'DOWN': return('↓'+state.moveSize); break;\r\n        //LEFT\r\n        case 'LEFT': return('←'+state.moveSize); break;\r\n        //RIGHT\r\n        case 'RIGHT': return('→'+state.moveSize); break;\r\n        //COMPOSED\r\n        case 'COMPOSED':\r\n            let s = '';\r\n            if (state.moveValue.jump1.dir !== '')\r\n                s += state.moveValue.jump1.dir +  state.moveValue.jump1.size;\r\n            if (state.moveValue.jump2.dir !== '')\r\n                s += state.moveValue.jump2.dir +  state.moveValue.jump2.size;\r\n            if (state.moveValue.jump3.dir !== '')\r\n                s += state.moveValue.jump3.dir +  state.moveValue.jump3.size;\r\n\r\n            return(s);\r\n            break;\r\n\r\n        //LOAD\r\n        case 'LOAD':\r\n            if(state.fuelSizeLoad === 0 && state.foodSizeLoad === 0)\r\n                return ('');\r\n            return('+'+'Т'+state.fuelSizeLoad+'П'+state.foodSizeLoad); break;\r\n        //UNLOAD\r\n        case 'UNLOAD':\r\n            if(state.fuelSizeUnload === 0 && state.foodSizeUnload === 0)\r\n                return ('');\r\n            return('-'+'Т'+state.fuelSizeUnload+'П'+state.foodSizeUnload); break;\r\n\r\n        //SPLIT\r\n        case 'SPLIT': return('расстык'); break;\r\n        //CONNECT\r\n        case 'CONNECT': return('стык'); break;\r\n        //CLEAR\r\n        case 'CLEAR': return(''); break;\r\n    }\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n/*\r\n\r\nif (action.type === UPDATE_CODE_FIELD) {\r\n        return state.boardRows.map((row, rowIndex) => {\r\n            if(rowIndex === action.payload.Y) {\r\n                row.map((cell, cellIndex) => {\r\n                 if(cellIndex === action.payload.X)\r\n                     return [cell, state.buttonValue];\r\n                })\r\n            }\r\n        });\r\n    }\r\n */","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from './store'\n\nwindow.store = store;\nconst rootElement = document.getElementById('root')\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    rootElement\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}